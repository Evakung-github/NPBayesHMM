{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"NPBayesHMM","google":"","tagline":"Nonparametric Bayesian Inference for Sequential Data.  Includes Beta process Hidden Markov Model (BP-HMM). Implemented in Matlab.","body":"### Welcome to the NPBayesHMM toolbox\r\n\r\nThis is a Matlab toolbox for performing inference on *collections* of sequential data.  For example, you can analyze several motion capture sensor streams at once, or find common activities in a video corpus.\r\n\r\nThe basic model we employ is the Beta Process Hidden Markov Model (BP-HMM).  Briefly, this model assumes that each sequence is generated by a \"hidden state sequence\" (technically, an HMM), which indicates which of a global set of possible behaviors (think mocap exercises) is active at each time. Once we know the active behavior at time t, we generate the observed data at that step from its behavior's emission distribution. This model assumes exactly one behavior is active at each step.\r\n\r\nUnlike the usual HMM approach, our BP-HMM is *nonparametric*.  This means that it does not require specifying in advance the exact number of behaviors used.  Instead, our inference explores possible sets of behaviors and finds an appropriate fit in a data-driven way.  This toolbox exists because these kinds of inference algorithms are quite complicated.  We've developed state-of-the-art methods to fit these models to real data, successfully analyzing hundreds of sequences at once.\r\n\r\nFor an academic introduction to the BP-HMM, see http://www.stat.washington.edu/~ebfox/publications/NIPS2009_BPARHMM.pdf.\r\n\r\nFor technical information about our new and improved inference, see our NIPS 2012 paper: http://web.michaelchughes.com/research/bp-hmm-split-merge-inference\r\n\r\n### Installation\r\nFor complete details, check out `HOME/doc/QuickStartGuide.pdf`\r\n\r\n1. Install required libraries\r\n    * [Eigen C++ Matrix Library](http://eigen.tuxfamily.org/index.php?title=Main_Page)\r\n    * [Tom Minka's Lightspeed for Matlab](http://research.microsoft.com/en-us/um/people/minka/software/lightspeed/)\r\n2. Compile MEX functions for fast HMM dynamic programming\r\n    * See `HOME/code/CompileMEX.sh` for details\r\n3. Specify where you want saved results.\r\n    * Create file `HOME/code/SimulationResults.path`\r\n    * Add one line of text that's a valid path on local system.\r\n    \r\n### Dive in!\r\n\r\nThe best way to understand the toolbox is to check out the demos in `HOME/code/demo/`.  Here, we'll walk through the simplest, `EasyDemo.m`.\r\n\r\nFirst, open Matlab and set up the working directory. Then just run the demo!\r\n\r\n\r\n`>> cd <path/to/NPBayesHMM/HOME>/code/`\r\n\r\n`>> configNPBayesToolbox();  % adds paths appropriately`\r\n\r\n`>> EasyDemo();`\r\n\r\nFirst, a collection of 5 data sequences are generated.  Here are two of them.  They are each 500 timesteps long, and at each timestep we observe a 2-dimensional vector (black and red lines).\r\n\r\n![2 toy data sequences for the BP-HMM.](http://www.michaelchughes.com/blog/wp-content/uploads/2012/09/TrueData.png)\r\n\r\nThis data was generated by 4 hidden \"behaviors\" (also called features). The background color specifies which behavior is active at each timepoint. Each behavior specifies a 2D Gaussian distribution, which serve as the emission parameters when the HMM is actively in that state. In this toy example, these 4 behaviors have well-separated parameters, as seen in this contour plot.\r\n\r\n![True Emission parameters.](http://www.michaelchughes.com/blog/wp-content/uploads/2012/09/TrueTheta.png)\r\n\r\nWe can build a binary matrix that indicates which sequences use which behaviors.  We call this matrix `F`, for \"feature matrix\".\r\n![True Feature Matrix.](http://www.michaelchughes.com/blog/wp-content/uploads/2012/09/TrueF-e1348844166319.png)\r\n\r\n### Running MCMC\r\n\r\nAfter generating this data, we apply our posterior inference algorithm to learn the emission parameters theta and feature matrix F.  This demo performs 100 iterations of MCMC.  \r\n\r\nThe amazing thing out our nonparametric approach is that we *do not* need to specify the number of features... we can start the inference with just one feature and the algorithm will explore until it finds the best possible set of features.  You can see this in the stdout feed produced by the inference.\r\n\r\n<pre>\r\nInitial Config: \r\n\t     0/100 after      0 sec | logPr -5.21e+03 | nFeats    1 \r\nRunning MCMC Sampler 1 : 1 ... \r\n\t     1/100 after      0 sec | logPr -3.97e+03 | nFeats    3 \r\n\t    10/100 after      1 sec | logPr  2.71e+03 | nFeats    5 \r\n\t    20/100 after      1 sec | logPr  2.72e+03 | nFeats    4 \r\n\t    30/100 after      1 sec | logPr  2.72e+03 | nFeats    4 \r\n\t    40/100 after      1 sec | logPr  2.72e+03 | nFeats    4 \r\n\t    50/100 after      2 sec | logPr  2.72e+03 | nFeats    4 \r\n\t    60/100 after      2 sec | logPr  2.72e+03 | nFeats    4 \r\n\t    70/100 after      2 sec | logPr  2.72e+03 | nFeats    4 \r\n\t    80/100 after      3 sec | logPr  2.72e+03 | nFeats    4 \r\n\t    90/100 after      3 sec | logPr  2.72e+03 | nFeats    4 \r\n\t   100/100 after      3 sec | logPr  2.72e+03 | nFeats    4 \r\n</pre>\r\n\r\nHere's a look at the recovered Feature matrix:\r\n\r\n![Est Feature Matrix.](http://www.michaelchughes.com/blog/wp-content/uploads/2012/09/EstF.png)\r\n\r\nThe recovered emission parameters theta:\r\n![Est Theta.](http://www.michaelchughes.com/blog/wp-content/uploads/2012/09/EstTheta.png)\r\n\r\nFinally, the recovered state sequence for the two sequences we plotted earlier\r\n![Est State Sequence.](http://www.michaelchughes.com/blog/wp-content/uploads/2012/09/EstZ.png)\r\n\r\nThat's it! Hopefully this demo convinced you that (1) our inference works, and (2) the NPBayesHMM toolbox can be a productive tool for analyzing sequential data.\r\n\r\n### More information\r\n\r\nContact Mike Hughes via email: `mike <AT> michaelchughes.com`\r\n\r\nRead our NIPS 2012 paper (camera ready coming soon!)\r\n\r\n### Related Projects\r\nCheck out Matthew Johnson's HDP-HSMM project: http://mattjj.github.com/pyhsmm/\r\n\r\nAlso, see Emily Fox's original BP-AR-HMM toolbox: http://www.stat.washington.edu/~ebfox/software.html"}